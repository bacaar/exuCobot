#!/usr/bin/env python

"""
Author: Aaron Bacher
Date: 18.08.2022

Script for comparing coeficients calculated by cpp and by python
"""

import numpy as np
import matplotlib.pyplot as plt

from PolynomialTrajectorySymbolic import evaluatePolynom, calcCoefs

data = list([
[[-0.0319214, -9.75853e-15, -1.7719e-12, -0.0319214, -3.46945e-16, 0, 0.01],               [3.33786e-06, -8.9407e-08, 8.14907e-10, -8.85949e-13, -9.75853e-15, -0.0319214]],
[[-0.0319214, 2.62598e-14, 6.59138e-12, -0.0319214, -0.000342178, 0, 0.01],                [102653, -2395.25, 13.6871, 3.29569e-12, 2.62598e-14, -0.0319214]],
[[-0.0319208, -0.000342178, 9.67326e-11, -0.0319282, -0.00349988, 0, 0.01],                [709819, -16166.6, 86.7261, 4.83663e-11, -0.000342178, -0.0319208]],
[[-0.0319226, -0.00349988, 7.32393e-10, -0.0319908, -0.00979659, 0, 0.01],                 [-106127, 5801.53, -80.6549, 3.66197e-10, -0.00349988, -0.0319226]],
[[-0.0319713, -0.00979659, 2.13244e-10, -0.0321185, -0.0169507, 0, 0.01],                  [-811740, 23870.6, -206.831, 1.06622e-10, -0.00979659, -0.0319713]],
#error                                                                                                                                                                                
[[-0.0432881, -0.0169732, -0.145949, -0.0323103, 0.536003, 0, 0.01],                    [5.03033e+08, -1.28527e+07, 89378.4, -0.0729743, -0.0169732, -0.0432881]],
[[-0.0432881, 0.563584, 172.142, -0.032568, 0.518794, 0, 0.01],                 [2.32419e+08, -5.35774e+06, 26812.5, 86.0711, 0.563584, -0.0432881]],         
[[-0.0432881, 0.535011, 99.3459, -0.0329122, 0.497121, 0, 0.01],                        [2.6324e+08, -6.3137e+06, 36871.4, 49.673, 0.535011, -0.0432881]],    
[[-0.0432881, 0.502155, 55.5039, -0.0333457, 0.470961, 0, 0.01],                        [2.76858e+08, -6.76709e+06, 42130.8, 27.752, 0.502155, -0.0432881]],  
[[-0.0432881, 0.487212, 103.212, -0.0338689, 0.439169, 0, 0.01],                        [2.35633e+08, -5.60877e+06, 31910.9, 51.6059, 0.487212, -0.0432881]], 
[[-0.0432881, 0.452348, 87.5268, -0.0345047, 0.401498, 0, 0.01],                        [2.27086e+08, -5.43291e+06, 31504.1, 43.7634, 0.452348, -0.0432881]],
[[-0.0432881, 0.412429, 77.6484, -0.0352581, 0.358075, 0, 0.01],                        [2.11822e+08, -5.07426e+06, 29583.6, 38.8242, 0.412429, -0.0432881]],
[[-0.0432881, 0.673096, 487.078, -0.0361266, 0.308894, 0, 0.01],                        [-1.08446e+08, 4.11096e+06, -54188.3, 243.539, 0.673096, -0.0432881]],
[[-0.0432881, 0.309183, 1.73275, -0.0371102, 0.25249, 0, 0.01],                 [2.01304e+08, -4.99993e+06, 32868.3, 0.866374, 0.309183, -0.0432881]],
[[-0.0432881, 0.26455, 74.9428, -0.0382383, 0.188563, 0, 0.01],                 [1.29583e+08, -3.01422e+06, 15841.1, 37.4714, 0.26455, -0.0432881]],
[[-0.0432881, 0.203745, 72.7178, -0.0395168, 0.1173, 0, 0.01],                  [9.36032e+07, -2.11506e+06, 9888.23, 36.3589, 0.203745, -0.0432881]],
[[-0.0432881, 0.123104, 38.3135, -0.0409421, 0.0388974, 0, 0.01],                       [7.30032e+07, -1.68719e+06, 8770.91, 19.1567, 0.123104, -0.0432881]],
[[-0.0432881, 0.0420759, 24.4803, -0.0425101, -0.0464413, 0, 0.01],                     [3.57464e+07, -788201, 3440.55, 12.2401, 0.0420759, -0.0432881]],
[[-0.0432881, -0.0450271, 11.8829, -0.0442169, -0.138504, 0, 0.01],                     [-6.61164e+06, 241737, -2828.91, 5.94145, -0.0450271, -0.0432881]],
[[-0.0432881, -0.13847, 0.264827, -0.0460582, -0.237072, 0, 0.01],                      [-5.36748e+07, 1.39183e+06, -9949.48, 0.132413, -0.13847, -0.0432881]],
[[-0.0432881, -0.240373, -19.1204, -0.0480295, -0.341919, 0, 0.01],                     [-1.00239e+08, 2.50895e+06, -16447.3, -9.56022, -0.240373, -0.0432881]],
[[-0.0432881, -0.346625, -32.2291, -0.0501265, -0.452812, 0, 0.01],                     [-1.54357e+08, 3.83146e+06, -24639.5, -16.1146, -0.346625, -0.0432881]],
[[-0.0432881, -0.465484, -67.4688, -0.0523443, -0.569512, 0, 0.01],                     [-1.99141e+08, 4.86188e+06, -29732.6, -33.7344, -0.465484, -0.0432881]],
[[-0.0432881, -0.57666, -57.0708, -0.0546783, -0.691775, 0, 0.01],                      [-2.74349e+08, 6.7736e+06, -43071.3, -28.5354, -0.57666, -0.0432881]],
[[-0.0432881, -0.700039, -71.1055, -0.0571236, -0.81935, 0, 0.01],                      [-3.38761e+08, 8.35091e+06, -52912.8, -35.5527, -0.700039, -0.0432881]],
[[-0.0432881, -0.828361, -82.4453, -0.0596751, -0.951982, 0, 0.01],                     [-4.07895e+08, 1.00531e+07, -63722.3, -41.2226, -0.828361, -0.0432881]],
[[-0.0432881, -0.962648, -98.4492, -0.0623277, -1.08941, 0, 0.01],                      [-4.77536e+08, 1.17557e+07, -74293.7, -49.2246, -0.962648, -0.0432881]],
[[-0.0432881, -1.10271, -119.257, -0.0650763, -1.23138, 0, 0.01],                       [-5.47441e+08, 1.34522e+07, -84576.4, -59.6283, -1.10271, -0.0432881]],
[[-0.0432881, -1.25498, -172.176, -0.0679156, -1.37761, 0, 0.01],                       [-6.01788e+08, 1.46756e+07, -90045.9, -86.0882, -1.25498, -0.0432881]],
[[-0.0432881, -1.39591, -158.727, -0.0708402, -1.52784, 0, 0.01],                       [-6.96643e+08, 1.70852e+07, -106845, -79.3636, -1.39591, -0.0432881]],
[[-0.0432881, -1.54765, -176.619, -0.0738448, -1.68179, 0, 0.01],                       [-7.76262e+08, 1.90321e+07, -118944, -88.3094, -1.54765, -0.0432881]],
[[-0.0432881, -1.70705, -211.215, -0.0769238, -1.83919, 0, 0.01],                       [-8.48666e+08, 2.07547e+07, -128685, -105.608, -1.70705, -0.0432881]],
[[-0.0432881, -1.86642, -229.759, -0.0800718, -2.00018, 0, 0.01],                       [-9.32164e+08, 2.27966e+07, -141381, -114.88, -1.86642, -0.0432881]],
[[-0.0432881, -2.02118, -209.927, -0.0832916, -2.16926, 0, 0.01],                       [-1.03812e+09, 2.55022e+07, -160505, -104.964, -2.02118, -0.0432881]],
[[-0.0432881, -2.19466, -243.078, -0.0866733, -2.34748, 0, 0.01],                       [-1.11893e+09, 2.7442e+07, -171811, -121.539, -2.19466, -0.0432881]],
[[-0.0432881, -2.39358, -344.47, -0.0902378, -2.53446, 0, 0.01],                      [-1.16633e+09, 2.83675e+07, -172833, -172.235, -2.39358, -0.0432881]],
[[-0.0432881, -2.56053, -262.875, -0.0939774, -2.72981, 0, 0.01],                       [-1.32282e+09, 3.24979e+07, -204637, -131.438, -2.56053, -0.0432881]]
])

current_poses = np.zeros(shape=(len(data), ))
target_poses = np.zeros(shape=(len(data), ))
t_target = np.zeros(shape=(len(data), ))

for i in range(len(data)):
    current_poses[i] = data[i][0][0]
    target_poses[i] = data[i][0][3]

segment_duration = 0.01
dt = 0.001
tend = len(data)*segment_duration

t = 0
segment_time = 0
coef_index = -1
i = 0

veclen = int(tend/dt)
states1 = np.zeros(shape=(veclen,3))
states2 = np.zeros(shape=(veclen,3))
tvec = np.zeros(shape=(veclen, ))

while(t < tend):
    
    if segment_time > segment_duration or coef_index == -1:
        segment_time = 0
        coef_index += 1

        # check if calculation has been correct
        parameter = data[coef_index][0]
        coef_new = calcCoefs(parameter[0], parameter[1], parameter[2], parameter[3], parameter[4], parameter[5], parameter[6])
        coef_old = data[coef_index][1]

        for c in (coef_new, coef_old):
            for j in range(6):
                print("{:.5e}".format(c[j]), end=" ")
            print()
        print()
        
        t_target[coef_index] = coef_index * segment_duration

    states1[i] = evaluatePolynom(coef_new, segment_time)
    states2[i] = evaluatePolynom(coef_old, segment_time)
    tvec[i] = t

    i += 1
    t += dt
    segment_time += dt

fig, axs = plt.subplots(3, 1, sharex=True)
for j in range(3):
    axs[j].plot(tvec, states1[:,j])
    axs[j].plot(tvec, states2[:,j], "--")
    axs[j].grid()

axs[0].plot(t_target, current_poses, 'gx')
axs[0].plot(t_target, target_poses, 'rx')

plt.show()